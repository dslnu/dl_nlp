---
title: "NLP: Lab 1"
execute:
  enabled: false
  cache: true
format:
  html:
    code-fold: true
jupyter: python3
code-fold: false
diagram:
  cache: true
  cache-dir: ./cache
  engine:
    tikz:
      execpath: lualatex
filters:
  - diagram
---

# Recommended reading 
- Chapter 1 from [NLTK book](https://www.nltk.org/book/ch01.html).
- Chapter 2.1 from [Jurafsky's book](https://web.stanford.edu/~jurafsky/slp3/). Plus related slides.
- Official Python [Regex package documentation](https://docs.python.org/3/howto/regex.html).
- [Regex cheatsheet](https://www.debuggex.com/cheatsheet/regex/python)
- [Another version with examples](https://images.datacamp.com/image/upload/v1665049611/Marketing/Blog/Regular_Expressions_Cheat_Sheet.pdf)


# Install Python NLTK package

From [here](https://www.nltk.org/install.html).
```
   pip install nltk
   pip install matplotlib
```

In order to install Python Tkinter library, look at https://stackoverflow.com/questions/69603788/how-to-pip-install-tkinter

Also install additional data by 
```python
   import nltk; 
   nltk.download('popular')
```

Set up the texts:
```python
   import nltk
   nltk.download('nps_chat')
   nltk.download('webtext')
   from nltk.book import *
```

# Exercises
**Task 1.** Using `FreqDist`, find the following from textN, where $N$ is $P \mod 8$:

- words that are hapaxes (unique) and those that occur less than 5 times
- draw a plot showing mapping from word length to word frequency
- find 10 most frequent words occurring at the end of the sentence


**Task 2.** Create custom NLTK text of your favourite (public domain) book via
```python
  f=open('book.txt','rU')
  raw=f.read()
  tokens = nltk.word_tokenize(raw)
  text = nltk.Text(tokens)
```
 Practice using `concordance`, `similar`, `dispersion_plot`, `FreqDist` on the resulting text.

**Task 3.** Write a program that will 

- collect all monetary amounts from a given text

Example: `"first amount is $123.45, second amount is $400"` -> `[123.45, 400]`.

- convert these to float numbers
- \item and sum them

**Task 4.** Consider a JSON of the following type:
```python
 {
  "HTTPHost": "localhost",
  "HTTPPort": 8545,
  "Config": {
    "Enabled": true,
    "Server": "wakuv2.prod",
    "Nodes": [ "8.210.222.231", "168.166.125.145", ...]
  }
 }
```
Write Python code that will use a regex to convert it as follows:

- Remove entries from "Nodes"\ that begin with "8."
- Replace each "Server"\ entry of the form \lstinline!ServerName.Serverype! with 
`"name": "ServerName", "type": "ServerType"`.

So, for example, `"Server": "wakuv2.prod"` will be replaced with `"Server": {"name": "wakuv2", "type": "prod"}`
